CREATE SEQUENCE IF NOT EXISTS RATE_SEQ INCREMENT BY 1 MINVALUE 1 START WITH 1;
CREATE SEQUENCE IF NOT EXISTS REPLENISHMENT_SEQ INCREMENT BY 1 MINVALUE 1 START WITH 1;
CREATE SEQUENCE IF NOT EXISTS DEPOSITES_SEQ INCREMENT BY 1 MINVALUE 1 START WITH 1;
CREATE SEQUENCE IF NOT EXISTS COMMON_SEQ INCREMENT BY 1 MINVALUE 1 START WITH 1;
CREATE TABLE IF NOT EXISTS RateSource (
  NAME VARCHAR(25) NOT NULL CHECK (NAME <> ''),
  PRIMARY KEY (NAME)
);
CREATE TABLE IF NOT EXISTS Currency (
  NAME VARCHAR(6) NOT NULL UNIQUE CHECK (NAME <> ''),
  PRIMARY KEY(NAME)
);
CREATE TABLE IF NOT EXISTS rates (
  ID INT NOT NULL default nextval('RATE_SEQ'),
  Currency VARCHAR(6) NOT NULL,
  Rate DECIMAL NOT NULL,
  Source VARCHAR(25) NOT NULL,
  Date DATE NOT NULL,
  PRIMARY KEY(ID),
  FOREIGN KEY (Currency) REFERENCES currency(name),
  FOREIGN KEY (Source) REFERENCES RateSource(name)
);
CREATE TABLE IF NOT EXISTS Replenishment (
  ID INT NOT NULL DEFAULT nextval('REPLENISHMENT_SEQ'),
  Currency VARCHAR(6) NOT NULL,
  Sum DECIMAL NOT NULL,
  Date date NOT NULL,
  PRIMARY KEY(ID),
  FOREIGN KEY (Currency) REFERENCES currency(name)
);
CREATE TABLE IF NOT EXISTS Deposites (
  ID INT NOT NULL DEFAULT nextval('DEPOSITES_SEQ'),
  StartDate date NOT NULL,
  EndDate date NOT NULL,
  Currency VARCHAR(6) NOT NULL,
  Replenisment INT NOT NULL,
  Sum DECIMAL NOT NULL,
  TaxOnPercents DECIMAL NOT NULL,
  DepositeRate DECIMAL NOT NULL,
  PRIMARY KEY(ID),
  FOREIGN KEY (Currency) REFERENCES currency(name),
  FOREIGN KEY (Replenisment) REFERENCES Replenishment(id)
);
ALTER TABLE Replenishment
  ADD COLUMN IF NOT EXISTS depId INT NOT NULL,
  ADD FOREIGN KEY (depId) REFERENCES Deposites(ID)
;
CREATE TABLE IF NOT EXISTS Users (
  NAME VARCHAR(50) NOT NULL CHECK (NAME <> ''),
  EMAIL VARCHAR(50) NOT NULL CHECK (EMAIL <> ''),
  PASSWORD VARCHAR(50) NOT NULL CHECK (PASSWORD <> ''),
  PRIMARY KEY (NAME)
);
CREATE TABLE IF NOT EXISTS Common (
  ID INT NOT NULL default nextval('COMMON_SEQ'),
  DEPOSITID INT NOT NULL,
  NAME VARCHAR(50) NOT NULL CHECK (NAME <> ''),
  PRIMARY KEY (ID),
  FOREIGN KEY (DEPOSITID) REFERENCES Deposites(ID),
  FOREIGN KEY (NAME) REFERENCES Users(NAME)
);
CREATE TABLE IF NOT EXISTS UserRole (
  ID INT NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  USERS VARCHAR(50) NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (USERS) REFERENCES Users(NAME)
);
ALTER TABLE Users
  ADD COLUMN IF NOT EXISTS  ROLES INT NOT NULL,
  ADD FOREIGN KEY (ROLES) REFERENCES UserRole(id)
;